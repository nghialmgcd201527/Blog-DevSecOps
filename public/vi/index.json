[
{
	"uri": "//localhost:1313/vi/",
	"title": "DevSecOps Pipeline",
	"tags": [],
	"description": "",
	"content": "DevSecOps Pipeline Project: Deploy ứng dụng với Amazon Elastic Kubernetes Service (EKS) Tổng quan Với project này, chúng ta sẽ host ứng dụng bằng các dịch vụ của AWS. Mục tiêu chính là triển khai DevSecOps Pipeline cho ứng dụng bao gồm CI/CD sử dụng Jenkins, Monitoring sử dụng Prometheus và Grafana, Security sử dụng SonarQube và Trivy và cuối cùng là deploy ứng dụng lên Amazon Elastic Kubernetes Service (EKS) bằng ArgoCD và Helm.\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-security/3.1-sonarqube/",
	"title": "Cài đặt SonarQube",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cài đặt SonarQube trên EC2 instance đã tạo ở bước trước. Các bạn hãy chạy câu lệnh dưới đây để cài đặt SonarQube:\ndocker run -d --name sonar -p 9000:9000 sonarqube:lts-community Vậy là đã tạo xong một container SonarQube trên EC2 instance.\nHãy nhớ tạo thêm một inbound rule cho phép truy cập vào port 9000 trên Security Group của EC2 instance.\nBây giờ, chúng ta sẽ truy cập vào SonarQube thông qua trình duyệt web. Username và password mặc định để đăng nhập vào SonarQube cả hai đều là admin, sau đó hãy đổi password theo ý của mình.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.1-updateiamrole/",
	"title": "Cập nhật IAM Role",
	"tags": [],
	"description": "",
	"content": "Để các EC2 instance của chúng ta có thể gửi session log tới S3 bucket , chúng ta sẽ cần cập nhật IAM Role đã gán vào EC2 instance bằng cách thêm vào policy cho phép quyền truy cập vào S3.\nCập nhật IAM Role Truy cập vào giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click vào role SSM-Role. Click Attach policies. Tại ô Search điền S3. Click chọn policy AmazonS3FullAccess. Click Attach policy. Trong thực tế chúng ta sẽ cấp quyền chặt chẽ hơn tới S3 bucket chỉ định. Trong khuôn khổ bài lab này chúng ta sử dụng policy AmazonS3FullAccess cho tiện dụng.\nTiếp theo chúng ta sẽ tiến hành tạo S3 bucket để lưu trữ session logs.\n"
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "DevSecOps là sự kết hợp của Development (phát triển), Security (bảo mật) và Operations (vận hành) nhằm tích hợp bảo mật vào mọi giai đoạn của quy trình phát triển phần mềm. DevSecOps pipeline mở rộng từ DevOps truyền thống bằng cách đưa các biện pháp bảo mật vào sớm và liên tục trong suốt vòng đời phát triển phần mềm, từ viết mã, xây dựng, kiểm thử đến triển khai và giám sát. Mục tiêu của DevSecOps là phát hiện và xử lý các lỗ hổng bảo mật nhanh chóng và hiệu quả hơn, giảm thiểu rủi ro trong quá trình phát triển và triển khai ứng dụng.\nƯu điểm của DevSecOps Pipeline:\nTăng cường bảo mật: Tích hợp bảo mật ngay từ đầu giúp phát hiện sớm các lỗ hổng và xử lý chúng trước khi triển khai, giảm thiểu nguy cơ bị tấn công. Tự động hóa kiểm thử bảo mật: Sử dụng các công cụ tự động như SAST (Static Application Security Testing), DAST (Dynamic Application Security Testing) và kiểm thử mã nguồn mở giúp phát hiện lỗi bảo mật liên tục và nhanh chóng. Rút ngắn thời gian triển khai: Bằng cách tích hợp bảo mật vào pipeline CI/CD, các quy trình kiểm thử bảo mật được tự động hóa, giúp đẩy nhanh tốc độ phát hành mà không bỏ qua yếu tố an toàn. Tiết kiệm chi phí: Phát hiện và sửa lỗi bảo mật sớm giúp giảm thiểu chi phí so với việc khắc phục sau khi ứng dụng đã đi vào hoạt động. Nâng cao nhận thức về bảo mật: Khuyến khích các nhóm phát triển, vận hành và bảo mật hợp tác chặt chẽ, nâng cao nhận thức và trách nhiệm về bảo mật trong toàn bộ tổ chức. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2forjenkinssonarqubetrivy/",
	"title": "Tạo EC2 instance để cài đặt Jenkins, SonarQube và Trivy",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo một EC2 instance để cài đặt Jenkins, SonarQube và Trivy.\nĐầu tiên, truy cập vào giao diện quản lý dịch vụ EC2 của AWS. Chọn Launch Instance để bắt đầu tạo một EC2 instance mới. Tại trang Launch an instance Đặt tên cho instance: Jenkins-SonarQube-Trivy Chọn Ubuntu AMI version 22 làm hệ điều hành cho EC2 instance. Chọn t2.large làm instance type. Ở phần Key Pair, chọn key pair đã tạo trước đó hoặc tạo mới một key pair. Ở phần Network settings, chọn VPC default và Public subnet default. Chọn Enable cho Auto-assign public IP và thêm inbound rule cho phương thức SSH. Trong phần Configure storage, nhập vào giá trị 25 GiB gp2 vì chúng ta sẽ cần một lượng lớn lưu trữ để cài đặt các plugins. Cuối cùng chọn Launch instance để tạo EC2 instance. Chờ giây lát để EC2 instance được tạo xong như hình dưới đây Nội dung Tạo VPC Tạo Public subnet Tạo Private subnet Tạo security group Tạo máy chủ Linux public Tạo máy chủ Windows private "
},
{
	"uri": "//localhost:1313/vi/3-security/3.2-private-instance/",
	"title": "Cài đặt Trivy",
	"tags": [],
	"description": "",
	"content": "Để cài đặt Trivy, hãy chạy câu lệnh sau trên EC2 instance:\nsudo apt-get install wget apt-transport-https gnupg lsb-release wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add - echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list sudo apt-get update sudo apt-get install trivy Sau khi cài đặt xong, hãy chạy câu lệnh sau để kiểm tra xem Trivy đã cài đặt thành công chưa:\ntrivy version Bây giờ, hãy thử scan repository của chúng ta bằng Trivy bằng cách chạy câu lệnh sau trong thư mục repository:\ntrivy fs . Kết quả sẽ hiển thị như sau:v\nTiếp theo, hãy thử scan một Docker image bằng Trivy bằng cách chạy câu lệnh sau:\ntrivy image \u0026lt;image-id\u0026gt; Như dưới đây là kết quả scan một Docker image:\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.2-createeip/",
	"title": "Tạo Elastic IP cho EC2 instance",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tiến hành tạo Elastic IP cho EC2 instance. Elastic IP là một địa chỉ IP tĩnh được cung cấp bởi AWS. Elastic IP có thể được gán cho một EC2 instance để giữ cho địa chỉ public IP không thay đổi khi khởi động lại EC2 instance.\nĐầu tiên, truy cập vào giao diện quản lý Elastic IP Click Allocate Elastic IP address để tạo một địa chỉ Elastic IP mới. Trong phần Elastic IP address settings, chọn Amazon\u0026rsquo;s pool of IPv4 addresses và Network border group là ap-southeast-1 (Trùng với region tạo EC2 instance trước đó) rồi chọn Allocate. Elastic IP đã được tạo thành công. Click vào Actions và chọn Associate Elastic IP address để gán Elastic IP cho EC2 instance. Ở trang Asscociate Elastic IP address, chọn Instance cho Resource type và chọn instance vừa tạo ở bước trước sau đó chọn Associate. Tạo IAM Role Trong bước này chúng ta sẽ tiến hành tạo IAM Role. Trong IAM Role này sẽ được gán policy AmazonSSMManagedInstanceCore, đây là policy cho phép máy chủ EC2 có thể giao tiếp với Session Manager.\nTruy cập vào giao diện quản trị dịch vụ IAM Ở thanh điều hướng bên trái, click Roles. Click Create role. Click AWS service và click EC2. Click Next: Permissions. Trong ô Search, điền AmazonSSMManagedInstanceCore và ấn phím Enter để tìm kiếm policy này. Click chọn policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Đặt tên cho Role là SSM-Role ở Role Name Click Create Role . Tiếp theo chúng ta sẽ thực hiện kết nối đến các máy chủ EC2 chúng ta đã tạo bằng Session Manager.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.2-creates3bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo 1 S3 bucket để lưu trữ các session logs được gửi từ các EC2 instance.\nTạo S3 Bucket Truy cập giao diện quản trị dịch vụ S3 Click Create bucket. Tại trang Create bucket. Tại mục Bucket name điền tên bucket lab-yourname-bucket-0001 Tại mục Region chọn Region bạn đang làm lab hiện tại. Tên S3 bucket phải đảm bảo không trùng với toàn bộ S3 bucket khác trong hệ thống. Bạn có thể thay thế tên mình và điền số ngẫu nhiên khi tạo tên S3 bucket.\nKéo chuột xuống phía dưới và click Create bucket. Khi tạo S3 bucket chúng ta đã thực hiện Block all public access nên các EC2 instance của chúng ta sẽ không thể kết nối tới S3 thông qua mạng internet. Trong bước tiếp theo chúng ta sẽ cấu hình tính năng S3 Gateway Endpoint để cho phép các EC2 instance có thể kết nối tới S3 bucket thông qua mạng nội bộ của VPC.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Thiết lập và triển khai",
	"tags": [],
	"description": "",
	"content": "Trong phần này chúng ta sẽ tiến hành tạo EC2 instance, tạo Elastic IP và cài đặt Docker trên EC2 để thử nghiệm deploy Docker ở local thành công hay chưa sau đó tiến hành deploy tự động hoá với Jenkins.\nNội dung Tạo EC2 instance để cài đặt Jenkins, SonarQube và Trivy Tạo Elastic IP cho EC2 instance Kết nối vào EC2 instance "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.3-clonecode/",
	"title": "Kết nối vào EC2 instance",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành kết nối vào EC2 instance bằng phương thức SSH.\nĐầu tiên các bạn hãy mở terminal và chuyển đến thư mục chứa file key pair đã tạo trước đó. Sử dụng lệnh sau để kết nối vào EC2 instance: ssh -i /path/key-pair-name.pem instance-user-name@instance-public-dns-name Cập nhật tất cả các packet trên máy chủ EC2 instance bằng lệnh sau: sudo apt update -y Clone code repository của chúng ta về EC2 instance bằng lệnh sau: git clone https://github.com/nghialmgcd201527/Workshop-DevSecOps.git Chuyển đến thư mục chứa code repository vừa clone về và kiểm tra xem đã có file Dockerfile chưa. cd Workshop-DevSecOps ls Để deploy ứng dụng bằng Dockerfile trên, chúng ta cần cài đặt Docker trên máy chủ EC2 instance: sudo apt-get update sudo apt-get install docker.io -y sudo usermod -aG docker $USER # Replace with your system\u0026#39;s username, e.g., \u0026#39;ubuntu\u0026#39; newgrp docker sudo chmod 777 /var/run/docker.sock Sau khi cài đặt xong Docker, chúng ta sẽ build Docker image từ Dockerfile: docker build -t workshop-devsecops . Chạy Docker container từ Docker image vừa build. docker run -d -p 8081:3000 workshop-devsecops:latest Vậy là chúng ta đã chạy Docker image thành công.\nTruy cập vào trình duyệt quản lý inbound rule của security group trong EC2 instance để mở port 8081 Truy cập vào mục Security của EC2 instance Click vào security group của EC2 instance Chọn Edit inbound rules và thêm một rule mới cho port 8081 sau đó chọn Save rules Truy cập vào trình duyệt và nhập địa chỉ IP public của EC2 instance kèm theo port 8081 để kiểm tra ứng dụng đã chạy thành công hay chưa. Vậy là chúng ta đã deploy Docker thành công ở local, có thể tiến hành thực hiện deploy tự động hoá từ đây.\n"
},
{
	"uri": "//localhost:1313/vi/3-security/",
	"title": "Security",
	"tags": [],
	"description": "",
	"content": "Trong project này, chúng ta sẽ dùng 2 tools cho security là SonarQube và Trivi.\nSonarQube là một công cụ quản lý chất lượng mã nguồn mã nguồn mở, giúp bạn theo dõi, quản lý và giảm thiểu rủi ro kỹ thuật trong mã nguồn của bạn.\nTrivy là một công cụ quét lỗ hổng bảo mật cho container, giúp bạn phát hiện các lỗ hổng bảo mật trong các image Docker.\nNội dung 3.1. Tạo Kết nối đến máy chủ EC2 Public 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.3-creategwes3/",
	"title": "Tạo S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền S3GW. Tại mục Service Category click chọn AWS services. Tại ô tìm kiếm điền S3, sau đó chọn com.amazonaws.[region].s3 Tại mục Services chọn com.amazonaws.[region].s3 có Type là Gateway. Tại mục VPC , chọn Lab VPC. Tại mục Route tables, chọn cả 2 route table. Kéo chuột xuống dưới cùng, click Create endpoint. Bước tiếp theo chúng ta sẽ tiến hành cấu hình Session Manager để có thể lưu trữ các session logs tới S3 bucket chúng ta đã tạo.\n"
},
{
	"uri": "//localhost:1313/vi/4-s3log/",
	"title": "Quản lý session logs",
	"tags": [],
	"description": "",
	"content": "Với Session Manager chúng ta có thể xem được lịch sử các kết nối tới các instance thông qua Session history. Tuy nhiên chúng ta chưa xem được chi tiết các câu lệnh được sử dụng.\nTrong phần này chúng ta sẽ tiến hành tạo S3 bucket và thực hiện cấu hình lưu trữ các session logs để xem được chi tiết các câu lệnh được sử dụng trong session.\nNội dung: Cập nhật IAM Role Tạo S3 Bucket Tạo S3 Gateway endpoint Cấu hình Session logs "
},
{
	"uri": "//localhost:1313/vi/4-s3log/4.4-configsessionlogs/",
	"title": "Theo dõi session logs",
	"tags": [],
	"description": "",
	"content": "Theo dõi session logs Truy cập giao diện quản trị dịch vụ System Manager - Session Manager Click tab Preferences. Click Edit. Kéo chuột xuống phía dưới, tại mục S3 logging, click chọn Enable. Bỏ chọn Allow only encrypted S3 buckets. Click chọn Choose a bucket name from the list. Chọn S3 bucket bạn đã tạo. Kéo chuột xuống phía dưới, click Save để lưu cấu hình.\nTruy cập giao diện quản trị dịch vụ System Manager - Session Manager\nClick Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig. Gõ lệnh hostname. Click Terminate để thoát session, click Terminate 1 lần nữa để xác nhận. Kiểm tra Session logs trong S3 Truy cập vào giao diện quản trị dịch vụ S3 Click vào tên S3 bucket chúng ta đã tạo cho bài lab. Click vào tên file sessions log Tại trang chi tiết objects , click Open. File logs sẽ được mở ở 1 tab mới trên trình duyệt.Bạn có thể xem các câu lệnh đã được lưu trữ lại trong session logs. "
},
{
	"uri": "//localhost:1313/vi/5-portfwd/",
	"title": "Port Forwarding",
	"tags": [],
	"description": "",
	"content": "\rPort Forwarding là mốt cách thức hữu ích để chuyển hướng lưu lượng mạng từ 1 địa chỉ IP - Port này sang 1 địa chỉ IP - Port khác. Với Port Forwarding chúng ta có thể truy cập một EC2 instance nằm trong private subnet từ máy trạm của chúng ta.\nChúng ta sẽ cấu hình Port Forwarding cho kết nối RDP giữa máy của mình với Private Windows Instance nằm trong private subnet mà chúng ta đã tạo cho bài thực hành này.\nTạo IAM User có quyền kết nối SSM Truy cập vào giao diện quản trị dịch vụ IAM Click Users , sau đó click Add users. Tại trang Add user. Tại mục User name, điền Portfwd. Click chọn Access key - Programmatic access. Click Next: Permissions. Click Attach existing policies directly. Tại ô tìm kiếm , điền ssm. Click chọn AmazonSSMFullAccess. Click Next: Tags, click Next: Reviews. Click Create user. Lưu lại thông tin Access key ID và Secret access key để thực hiện cấu hình AWS CLI. Cài đặt và cấu hình AWS CLI và Session Manager Plugin Để thực hiện phần thực hành này, đảm bảo máy trạm của bạn đã cài AWS CLI và Session Manager Plugin\nBạn có thể tham khảo thêm bài thực hành về cài đặt và cấu hình AWS CLI tại đây.\nVới Windows thì khi giải nén thư mục cài đặt Session Manager Plugin bạn hãy chạy file install.bat với quyền Administrator để thực hiện cài đặt.\nThực hiện Portforwarding Chạy command dưới đây trong Command Prompt trên máy của bạn để cấu hình Port Forwarding. aws ssm start-session --target (your ID windows instance) --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region (your region) Thông tin Instance ID của Windows Private Instance có thể tìm được khi bạn xem chi tiết máy chủ EC2 Windows Private Instance.\nCâu lệnh ví dụ C:\\Windows\\system32\u0026gt;aws ssm start-session --target i-06343d7377486760c --document-name AWS-StartPortForwardingSession --parameters portNumber=\u0026#34;3389\u0026#34;,localPortNumber=\u0026#34;9999\u0026#34; --region ap-southeast-1 Nếu câu lệnh của bạn báo lỗi như dưới đây : SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found\nChứng tỏ bạn chưa cài Session Manager Plugin thành công. Bạn có thể cần khởi chạy lại Command Prompt sau khi cài Session Manager Plugin.\nKết nối tới Private Windows Instance bạn đã tạo bằng công cụ Remote Desktop trên máy trạm của bạn. Tại mục Computer: điền localhost:9999. Quay trở lại giao diện quản trị của dịch vụ System Manager - Session Manager. Click tab Session history. Chúng ta sẽ thấy các session logs với tên Document là AWS-StartPortForwardingSession. Chúc mừng bạn đã hoàn tất bài thực hành hướng dẫn cách sử dụng Session Manager để kết nối cũng như lưu trữ các session logs trong S3 bucket. Hãy nhớ thực hiện bước dọn dẹp tài nguyên để tránh sinh chi phí ngoài ý muốn nhé.\n"
},
{
	"uri": "//localhost:1313/vi/6-cleanup/",
	"title": "Dọn dẹp tài nguyên  ",
	"tags": [],
	"description": "",
	"content": "Chúng ta sẽ tiến hành các bước sau để xóa các tài nguyên chúng ta đã tạo trong bài thực hành này.\nXóa EC2 instance Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click chọn cả 2 instance Public Linux Instance và Private Windows Instance. Click Instance state. Click Terminate instance, sau đó click Terminate để xác nhận. Truy cập giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click chọn SSM-Role. Click Delete, sau đó điền tên role SSM-Role và click Delete để xóa role. Click Users. Click chọn user Portfwd. Click Delete, sau đó điền tên user Portfwd và click Delete để xóa user. Xóa S3 bucket Truy cập giao diện quản trị dịch vụ System Manager - Session Manager. Click tab Preferences. Click Edit. Kéo chuột xuống dưới. Tại mục S3 logging. Bỏ chọn Enable để tắt tính năng logging. Kéo chuột xuống dưới. Click Save. Truy cập giao diện quản trị dịch vụ S3 Click chọn S3 bucket chúng ta đã tạo cho bài thực hành. ( Ví dụ : lab-fcj-bucket-0001 ) Click Empty. Điền permanently delete, sau đó click Empty để tiến hành xóa object trong bucket. Click Exit. Sau khi xóa hết object trong bucket, click Delete Điền tên S3 bucket, sau đó click Delete bucket để tiến hành xóa S3 bucket. Xóa các VPC Endpoint Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Chọn 4 endpoints chúng ta đã tạo cho bài thực hành bao gồm SSM, SSMMESSAGES, EC2MESSAGES, S3GW. Click Actions. Click Delete VPC endpoints. Tại ô confirm , điền delete. Click Delete để tiến hành xóa các endpoints. Click biểu tượng refresh, kiểm tra tất cả các endpoints đã bị xóa trước khi làm bước tiếp theo. Xóa VPC Truy cập vào giao diện quản trị dịch vụ VPC Click Your VPCs. Click chọn Lab VPC. Click Actions. Click Delete VPC. Tại ô confirm, điền delete để xác nhận, click Delete để thực hiện xóa Lab VPC và các tài nguyên liên quan. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]